//{ Driver Code Starts
import java.util.*;
import java.lang.*;
import java.io.*;
class GFG
{
    public static void main(String[] args) throws IOException
    {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        int T = Integer.parseInt(br.readLine().trim());
        while(T-->0)
        {
            int n = Integer.parseInt(br.readLine().trim());
            int[] nums = new int[n];
            String[] S = br.readLine().trim().split(" ");
            for(int i = 0; i < n; i++){
                nums[i] = Integer.parseInt(S[i]);
            }
            Solution obj = new Solution();
            int ans = obj.minSwaps(nums);
            System.out.println(ans);
       }
    }
}
// } Driver Code Ends




class Solution
{
    //Function to find the minimum number of swaps required to sort the array.
    public int minSwaps(int nums[])
    {
        // Code here
        int count=0;
        int temp=0;
        for(int i=0;i<nums.length-1;i++){
            int min_index=i;
            for(int j=i+1;j<nums.length;j++){
                if(nums[min_index]>nums[j]) {
                    min_index=j;
                }
            }
                if(min_index!=i){
                    temp = nums[i];
                    nums[i] = nums[min_index];
                    nums[min_index] = temp;
                    count++;
                }
            }
            return count;
    }
}
