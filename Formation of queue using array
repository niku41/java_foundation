//formation of queue by array
public class QueueY{
    /*public static int n;
    static class Queue{
        static int arr[];
        int size;
        static int rear=-1;

        Queue(){
            arr=new int [5];
            this.size=5;
        }

        public Queue(int i) {
        }

        public boolean isEmpty(){
            return rear==-1;
        }
        public void add(int data){
            if(rear==size-1){
                //System.out.println("full queue");
                return ;
            }
            rear++;
            arr[rear]=data;
        }
        public int remove(){
            if(isEmpty()){
                System.out.println("empty queue");
                return -1;
            }
            int front=arr[0];
            for(int i=0;i<rear;i++){
                arr[i]=arr[i+1];
            }
            rear--;
            return front;
        }
        public int peek(){
            if(isEmpty()){
                System.out.println("empty queue");
                return -1;
            }
            return arr[0];
        }
    }
    public static void main(String []args){
        Queue q=new Queue(5);
        q.add(1);
        q.add(2);
        q.add(3);
        while(!q.isEmpty()){
            System.out.println(q.peek());
            q.remove();
        }
    }*/
    static class Queue {
       static int arr[];
       static int rear;
    Queue(int size) {
           arr = new int[size];
           rear = -1;
       }


       public static boolean isEmpty() {
           return rear == -1;
       }


       public static boolean isFull() {
           return (rear==rear-1);
       }


       public void add(int data) {
           if(isFull()) {
               System.out.println("Overflow");
               return;
           }


           arr[++rear] = data;
       }


       //O(n)
       public int remove() {
           if(isEmpty()) {
               System.out.println("empty queue");
               return -1;
           }
           int front = arr[0];
           for(int i=0; i<rear; i++) {
               arr[i] = arr[i+1];
           }
	     rear--;	
           return front;
       }


       public int peek() {
           if(isEmpty()) {
               System.out.println("empty queue");
               return -1;
           }
          
           return arr[0];
       }
   }
   public static void main(String args[]) {
       Queue q = new Queue(5);
       q.add(1);
       q.add(2);
       q.add(3);
       System.out.println(q.remove());
       System.out.println(q.peek());
   }

}
