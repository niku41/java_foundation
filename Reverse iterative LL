//reverse iterative
class LL4{
    Node head;
    private int size;
    LL4(){
        this.size=0;
    }
class Node{
    String data;
    Node next;
    Node(String data){
        this.data=data;
        this.next=null;
        size++;
    }
}

public void addFirst(String data){
    Node newNode=new Node(data);
    if(head==null){
        head=newNode;
        return;
    }
    newNode.next=head;
    head=newNode;
}
public void addLast(String data){
    Node newNode=new Node(data);
    if(head==null){
        head=newNode;
        return;
    }
    Node currNode=head;
    while(currNode.next!=null){
        currNode=currNode.next;
    }
    currNode.next=newNode;
}
public void printList(){
    if(head==null){
        System.out.println("list is empty");
        return;
    }
Node currNode=head;
    while(currNode!=null){
        System.out.print(currNode.data+"->");
        currNode=currNode.next;
    }
    System.out.println("NULL");
}
public void deleteFirst(){
    if(head==null){
        System.out.println("The list is empty");
        return;
    }
    size--;
    head=head.next;
}
public void deleteLast(){
    if(head==null){
        System.out.println("The list is empty");
        return;
    }
    size--;
    if(head.next==null){
        head=null;
        return;
    }
    Node secondLast=head;
    Node lastNode=head.next;
    while(lastNode.next !=null){
        lastNode=lastNode.next;
        secondLast=secondLast.next;
    }
    secondLast.next=null;
}
public int getSize(){
    return size;
}
public void reverseIterate(){
    if(head==null || head.next==null){
        return;
    }
    Node prevNode=head;
    Node currNode=head.next;
    while(currNode!=null){
        Node nextNode=currNode.next;
        currNode.next=prevNode;
        prevNode=currNode;
        currNode=nextNode;
    }
    head.next=null;
    head=prevNode;
}

public static void main(String[]args){
    LL4 list=new LL4();
    list.addFirst("2");
    list.addLast("3");
    list.printList();
    list.addLast("4");
    list.printList();
    list.addFirst("1");
    list.reverseIterate();
    list.printList();
}
}
